{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/dialogs/add/add.component.html","./src/app/dialogs/add/add.component.ts","./src/app/dialogs/delete/delete.component.html","./src/app/dialogs/delete/delete.component.ts","./src/app/dialogs/edit/edit.component.html","./src/app/dialogs/edit/edit.component.ts","./src/app/intro-page/intro-page.component.html","./src/app/intro-page/intro-page.component.ts","./src/app/proxies.ts","./src/app/proxy-data-table/proxy-data-table.component.html","./src/app/proxy-data-table/proxy-data-table.component.ts","./src/app/proxy-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","   \r\n    <router-outlet></router-outlet> \r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProxyListProject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTableModule, MatTableDataSource} from '@angular/material/table';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ProxyDataTableComponent } from './proxy-data-table/proxy-data-table.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule, MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input'\nimport {  MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AddComponent } from './dialogs/add/add.component';\nimport { EditComponent } from './dialogs/edit/edit.component';\nimport { DeleteComponent } from './dialogs/delete/delete.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { IntroPageComponent } from './intro-page/intro-page.component';\nimport {RouterModule,Routes} from '@angular/router';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\n\n\nconst routes:Routes=[\n  {path: '' , component : IntroPageComponent},\n  {path: \"proxyList\", component: ProxyDataTableComponent },\n]\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProxyDataTableComponent,\n    AddComponent,\n    EditComponent,\n    DeleteComponent,\n    IntroPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatSelectModule,\n    FormsModule,\n   MatTableModule,\n    BrowserAnimationsModule,\n    MatPaginatorModule,\n    RouterModule.forRoot(routes),\n    MatSortModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatRadioModule,\n    ReactiveFormsModule,\n    MatSnackBarModule\n \n  ],\n  entryComponents: [\n    AddComponent,\n    EditComponent,\n    DeleteComponent\n  ],\n  providers: [\n    { provide: MatDialogRef, useValue: {} },\n    { provide: MAT_DIALOG_DATA, useValue: [] },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<div class=\"container\">\n        <h3 mat-dialog-title>Add new Proxy</h3>\n      \n        <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"IP Address\" [(ngModel)]=\"data.ipaddress\" name=\"ipaddress\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"Port\" [(ngModel)]=\"data.port\" name=\"Port\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #inputstate class=\"form-control\" placeholder=\"Test_Result\" [(ngModel)]=\"data.test_result\" name=\"test_result\" maxlength=\"10\" required >\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"firstFoundAddress\" [(ngModel)]=\"data.firstFoundAddress\" name=\"First Found Address\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"lastFoundAddress\" [(ngModel)]=\"data.lastFoundAddress\" name=\"Last Found Address\">\n            </mat-form-field>\n          </div>\n      \n         \n          <div mat-dialog-actions>\n            <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </form>\n      </div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {Proxies} from 'src/app/proxies';\nimport {ProxyDataService} from 'src/app/proxy-data.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Proxies,\n              public proxyDataService: ProxyDataService, public dialog: MatDialog, private _snackBar: MatSnackBar) {\n  }\n\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n  ngOnInit(): void {\n  }\n\n\n  submit() {\n// emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    this.proxyDataService.createProxy(this.data).subscribe(val => {\n      console.log(val);\n      this.proxyDataService.refreshData.next(true);\n      this._snackBar.open(\" Added Successfully\",\":-)\",{\n        duration: 3000,\n      });\n     \n    });\n  }\n\n\n}\n\n\n","<div class=\"container\">\n        <h3 mat-dialog-title>Are you sure you want to delete?</h3>\n        <div mat-dialog-content>\n          IP Address: {{data.ipaddress}}\n          <p></p>\n          Port: {{data.port}}\n          <p></p>\n          Test_Result: {{data.test_result}}\n          <p></p>\n          firstFoundAddress: {{data.firstFoundAddress}}\n          <p></p>\n          lastFoundAddress: {{data.lastFoundAddress}}\n        </div>\n      \n        <div mat-dialog-actions>\n          <button mat-button color=\"primary\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n          <button mat-button color=\"primary\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n        </div>\n      </div>\n","import {Component, OnInit, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ProxyDataService} from 'src/app/proxy-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n  ngOnInit(): void {\n  }\n\n  constructor(public dialogRef: MatDialogRef<DeleteComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: ProxyDataService, private _snackBar: MatSnackBar) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteProxy(this.data).subscribe(val => {\n      console.log(val);\n      this.dataService.refreshData.next(true);\n      this._snackBar.open(\" Deleted Successfully\",\":-)\",{\n        duration: 3000,\n      });    });\n  }\n\n}\n","\n<div class=\"container\">\n        <h3 mat-dialog-title>Update Proxy</h3>\n      \n        <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"IP Address\" [(ngModel)]=\"data.ipaddress\" name=\"ipaddress\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"Port\" [(ngModel)]=\"data.port\" name=\"Port\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #inputstate class=\"form-control\" placeholder=\"Test_Result\" [(ngModel)]=\"data.test_result\" name=\"test_result\" maxlength=\"10\" required >\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"firstFoundAddress\" [(ngModel)]=\"data.firstFoundAddress\" name=\"First Found Address\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"lastFoundAddress\" [(ngModel)]=\"data.lastFoundAddress\" name=\"Last Found Address\">\n            </mat-form-field>\n          </div>\n\n      \n          <div mat-dialog-actions>\n                <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"stopEdit()\">Save</button>\n                <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n              </div>\n        </form>\n      </div>\n","import {Component, OnInit, Inject} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ProxyDataService} from 'src/app/proxy-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<EditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public proxyDataService: ProxyDataService,private _snackBar: MatSnackBar) {\n  }\n\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n  ngOnInit(): void {\n  }\n\n\n  submit() {\n// emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n    this.proxyDataService.updateProxy(this.data).subscribe(val => {\n      console.log(val);\n      this.proxyDataService.refreshData.next(true);\n      this._snackBar.open(\"Updated Successfully\",\":-)\",{\n        duration: 3000,\n      });    \n    });\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<body>\n    <header>  \n        <img align=\"center\" src=\"assets\\Images\\logo.jpg\"  width=\"250\" height=\"100\">\n      </header>\n<div class=\"content\">\n<h2>Database and Web Techniques -  ProxyList Project</h2>\n<h3>By Harshitha Rathod </h3>\n     <h3>& </h3>\n     <h3> Surya Kiran Suravarapu\n        </h3>\n</div>\n    <footer>\n            <div align=\"right\">\n                <button color=\"white\" variant=\"contained\"  (click)=\"next();\">\n                    ProxyLists\n            </button>\n        </div>\n        </footer>\n\n\n</body>\n\n\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProxyDataService } from '../proxy-data.service';\n\n@Component({\n  selector: 'app-intro-page',\n  templateUrl: './intro-page.component.html',\n  styleUrls: ['./intro-page.component.css']\n})\nexport class IntroPageComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  next(){\n    this.router.navigate(['/proxyList'])\n  }\n\n}\n","export class Proxies{\r\n    id: Number;\r\n    ipaddress: string;\r\n    port:Number;\r\n    test_result: string;\r\n    anonymity:string;\r\n    firstFoundAddress: string;\r\n    lastFoundAddress: string;\r\n \r\n}","\n\n<mat-toolbar color=\"primary\">\n    <span class=\"head\"  align =\"center\">ProxyLists</span>\n    <span class=\"spacer\"></span>\n  </mat-toolbar>\n\n\n<div class=\"container text-center\">\n<mat-form-field appearance=\"fill\">\n    <mat-label>Proxy List Providers</mat-label>\n    <mat-select [(ngModel)]=\"selectedProxy\" (ngModelChange)=\"onProxySelection()\">\n      <mat-option value='none'>None</mat-option>\n      <mat-option value=\"1\">https://gimmeproxy.com/api/getProxy</mat-option>\n      <mat-option value=\"2\" >https://proxy11.com/api/proxy.json?key=MTI3OA.Xs--Lg.5FG2Pg_WoLej_ubo8rKpQQbaIZc</mat-option>\n      <mat-option value=\"3\">https://api.getproxylist.com/proxy</mat-option>\n      <mat-option value=\"4\">http://pubproxy.com/api/proxy</mat-option>\n     \n    </mat-select>\n  </mat-form-field><br><br>\n\n  \n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <mat-select [(ngModel)]=\"selectedValue\" (ngModelChange)=\"onDisplayingProxySelection()\"  >\n        <mat-option value='none' >All Proxies</mat-option>\n      <mat-option value=\"UP\" >WorkingProxies</mat-option>\n    </mat-select>\n    </mat-form-field><br><br>\n\n\n  <mat-form-field>\n    <mat-label>Search by IP Address</mat-label>\n    <mat-icon matPrefix aria-label=\"Search\">search</mat-icon>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. 192.225.137.25\">\n   </mat-form-field>\n\n    <mat-table [dataSource]=\"selectedProxyList\">\n      <ng-container matColumnDef=\"IP Address\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> IP Address </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\" > {{Proxies.ipaddress}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"port\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Port </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\" > {{Proxies.port}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"test_result\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Test Result </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.test_result}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"anonymity\">\n          <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Anonymity </mat-header-cell>\n          <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.anonymity}} </mat-cell>\n        </ng-container>\n      <ng-container matColumnDef=\"first found Address\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> First Found Address </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.firstFoundAddress}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"last found Address\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Last Found Address </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.lastFoundAddress}} </mat-cell>\n      </ng-container>\n     \n\n\n      <!-- Action Column -->\n <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>\n        <button mat-icon-button color=\"primary\" (click)=\"addNew()\">\n          <mat-icon aria-label=\"Example icon-button with a heart icon\">add</mat-icon>\n        </button>\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let Proxies; let i=index;\">\n        <button mat-icon-button color=\"accent\" (click)=\"startEdit(Proxies)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" (click)=\"deleteItem(Proxies)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n\n  </div>\n","import {Component, OnInit, ViewChild, ElementRef} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {ProxyDataService} from '../proxy-data.service';\nimport {Proxies} from '../proxies';\nimport {Observable} from 'rxjs';\nimport {Proxylist} from '../proxylist';\nimport {MatTableDataSource, MatTable} from '@angular/material/table';\nimport {CdkTableModule} from '@angular/cdk/table';\n\n\n\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddComponent} from '../dialogs/add/add.component';\nimport {EditComponent} from '../dialogs/edit/edit.component';\nimport {DeleteComponent} from '../dialogs/delete/delete.component';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-proxy-data-table',\n  templateUrl: './proxy-data-table.component.html',\n  styleUrls: ['./proxy-data-table.component.css']\n})\nexport class ProxyDataTableComponent implements OnInit {\n  selectedProxy: number;\n  selectedValue: string;\n  selectedProxyList: Proxies[];\n  ipaddress: string;\n  port: number;\n  index: number;\n  exampleDatabase: ProxyDataService | null;\n\n\n  proxyDataSource: Proxies[];\n  displayedColumns = ['IP Address', 'port', 'test_result','anonymity','first found Address', 'last found Address', 'action'];\n  dataSource: { ipaddress: any; port: any; }[];\n  @ViewChild(MatTable, {static: true}) table: MatTable<any>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild('filter', {static: true}) filter: ElementRef;\n\n  constructor(private proxyDataService: ProxyDataService, public dialog: MatDialog, private router:Router) {\n    this.proxyDataService.getProxies().subscribe(value => {\n        this.proxyDataSource = value;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.proxyDataService.refreshData.subscribe(\n      value => {\n        if (value) {\n          this.proxyDataService.getProxies().subscribe(proxies => {\n              this.proxyDataSource = proxies;\n              this.onProxySelection();\n            }\n          );\n        }\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    // deletthis.dataSource = new MatTableDataSource(this.selectedProxyList);\n    this.selectedProxyList = this.proxyDataSource.filter(proxy => proxy.id == this.selectedProxy && proxy.ipaddress.includes(filterValue));\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onProxySelection() {\n    this.selectedValue='none';\n    console.log(this.selectedProxy);\n    this.selectedProxyList = this.proxyDataSource.filter(proxy => proxy.id == this.selectedProxy);\n    console.log(this.selectedProxyList);\n  }\n\n  onDisplayingProxySelection() {\n    if (this.selectedValue === 'UP') {\n      this.selectedProxyList = this.selectedProxyList.filter(proxy => proxy.test_result == this.selectedValue);\n    }else{\n      this.selectedProxyList = this.proxyDataSource.filter(proxy => proxy.id == this.selectedProxy);\n    }\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(AddComponent, {\n      data: {proxies: Proxies}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.exampleDatabase.dataChange.value.push(this.proxyDataService.getDialogData());\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  startEdit(proxy: any) {\n    const dialogRef = this.dialog.open(EditComponent, {\n      data: proxy\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // Based on ur requirement u can right after close logic here\n      /*  this.proxyDataService.updateProxy(this.editData).subscribe(val => {\n          // When using an edit things are little different, firstly we find record inside DataService by id\n          const foundIndex = this.proxyDataService.dataChange.value.findIndex(x => x.ipaddress === this.ipaddress);\n          console.log(foundIndex);\n          // Then you update that record using data from dialogData (values you enetered)\n          this.exampleDatabase.dataChange.value[foundIndex] = this.proxyDataService.getDialogData();\n          // And lastly refresh table\n          this.refreshTable();\n        });*/\n\n      }\n    });\n  }\n\n  refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  deleteItem(proxy: any) {\n    console.log(proxy);\n    const dialogRef = this.dialog.open(DeleteComponent, {\n      data: proxy\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // Based on ur requirement u can right after close logic here\n        /* const foundIndex = this.proxyDataService.dataChange.value.findIndex(x => x.ipaddress === this.ipaddress);\n         // for delete we use splice in order to remove single object from DataService\n         this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n         this.exampleDatabase.getProxies();*/\n      }\n    });\n\n  }\n\n\n}\n\nexport class ProxyDataSource extends DataSource<any> {\n  filter: string;\n\n  constructor(private proxyDataService: ProxyDataService) {\n    super();\n  }\n\n  connect(): Observable<Proxies[]> {\n    return this.proxyDataService.getProxies();\n  }\n\n  disconnect() {\n  }\n\n  \n\n\n}\n","import {Injectable} from '@angular/core';\nimport {Proxies} from './proxies';\nimport {Proxylist} from './proxylist';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProxyDataService {\n  dataChange: BehaviorSubject<Proxies[]> = new BehaviorSubject<Proxies[]>([]);\n  private baseUrl = '/proxies/api';\n  dialogData: any;\n  refreshData: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n\n  constructor(private httpclient: HttpClient) {\n  }\n  \n\n  getProxies(): Observable<Proxies[]> {\n    return this.httpclient.get<Proxies[]>(`${this.baseUrl + '/getProxies'}`);\n  }\n\n  getProxy(id: number): Observable<Proxies[]> {\n    return this.httpclient.get<Proxies[]>(`${this.baseUrl + '/getProxy/id'}`);\n  }\n\n  createProxy(proxy: Proxies) {\n    return this.httpclient.post(`${this.baseUrl + '/postProxy'}`, proxy);\n  }\n\n  updateProxy(proxy: Proxies) {\n    return this.httpclient.put(`${this.baseUrl + '/putProxy'}`, proxy);\n  }\n\n  deleteProxy(proxy: Proxies): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders(), body: proxy\n    };\n    return this.httpclient.delete<any>(`${this.baseUrl + '/deleteProxy'}`, httpOptions);\n  }\n\n\n\n  getProxyLists(): Observable<Proxylist[]> {\n    return this.httpclient.get<Proxylist[]>(`${this.baseUrl + '/getProxyLists'}\n    \n`);\n\n  }\n\n\n\n  getDialogData() {\n    return this.dialogData;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}