{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/dialogs/add/add.component.html","webpack:///src/app/dialogs/add/add.component.ts","webpack:///src/app/dialogs/delete/delete.component.html","webpack:///src/app/dialogs/delete/delete.component.ts","webpack:///src/app/dialogs/edit/edit.component.html","webpack:///src/app/dialogs/edit/edit.component.ts","webpack:///src/app/intro-page/intro-page.component.html","webpack:///src/app/intro-page/intro-page.component.ts","webpack:///src/app/proxies.ts","webpack:///src/app/proxy-data-table/proxy-data-table.component.html","webpack:///src/app/proxy-data-table/proxy-data-table.component.ts","webpack:///src/app/proxy-data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","routes","path","component","AppModule","AddComponent","dialogRef","data","proxyDataService","dialog","_snackBar","formControl","required","close","createProxy","subscribe","val","console","log","refreshData","next","open","duration","DeleteComponent","dataService","deleteProxy","EditComponent","updateProxy","IntroPageComponent","router","navigate","Proxies","ProxyDataTableComponent","displayedColumns","getProxies","value","proxyDataSource","proxies","onProxySelection","event","filterValue","target","selectedProxyList","filter","proxy","selectedProxy","ipaddress","includes","selectedValue","test_result","afterClosed","result","exampleDatabase","dataChange","push","getDialogData","refreshTable","paginator","_changePageSize","pageSize","ProxyDataSource","ProxyDataService","httpclient","baseUrl","get","post","put","httpOptions","headers","body","dialogData","environment","production","err","error"],"mappings":"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A;;AAAA;;AAAA;;AAAA;;AAGI;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAMF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAMF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAKF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAKF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","   \r\n    <router-outlet></router-outlet> \r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProxyListProject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTableModule, MatTableDataSource} from '@angular/material/table';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ProxyDataTableComponent } from './proxy-data-table/proxy-data-table.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule, MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input'\nimport {  MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AddComponent } from './dialogs/add/add.component';\nimport { EditComponent } from './dialogs/edit/edit.component';\nimport { DeleteComponent } from './dialogs/delete/delete.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { IntroPageComponent } from './intro-page/intro-page.component';\nimport {RouterModule,Routes} from '@angular/router';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\n\n\nconst routes:Routes=[\n  {path: '' , component : IntroPageComponent},\n  {path: \"proxyList\", component: ProxyDataTableComponent },\n]\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProxyDataTableComponent,\n    AddComponent,\n    EditComponent,\n    DeleteComponent,\n    IntroPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatSelectModule,\n    FormsModule,\n   MatTableModule,\n    BrowserAnimationsModule,\n    MatPaginatorModule,\n    RouterModule.forRoot(routes),\n    MatSortModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatRadioModule,\n    ReactiveFormsModule,\n    MatSnackBarModule\n \n  ],\n  entryComponents: [\n    AddComponent,\n    EditComponent,\n    DeleteComponent\n  ],\n  providers: [\n    { provide: MatDialogRef, useValue: {} },\n    { provide: MAT_DIALOG_DATA, useValue: [] },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<div class=\"container\">\n        <h3 mat-dialog-title>Add new Proxy</h3>\n      \n        <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"IP Address\" [(ngModel)]=\"data.ipaddress\" name=\"ipaddress\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"Port\" [(ngModel)]=\"data.port\" name=\"Port\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #inputstate class=\"form-control\" placeholder=\"Test_Result\" [(ngModel)]=\"data.test_result\" name=\"test_result\" maxlength=\"10\" required >\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"firstFoundAddress\" [(ngModel)]=\"data.firstFoundAddress\" name=\"First Found Address\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"lastFoundAddress\" [(ngModel)]=\"data.lastFoundAddress\" name=\"Last Found Address\">\n            </mat-form-field>\n          </div>\n      \n         \n          <div mat-dialog-actions>\n            <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </form>\n      </div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {Proxies} from 'src/app/proxies';\nimport {ProxyDataService} from 'src/app/proxy-data.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AddComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Proxies,\n              public proxyDataService: ProxyDataService, public dialog: MatDialog, private _snackBar: MatSnackBar) {\n  }\n\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n  ngOnInit(): void {\n  }\n\n\n  submit() {\n// emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    this.proxyDataService.createProxy(this.data).subscribe(val => {\n      console.log(val);\n      this.proxyDataService.refreshData.next(true);\n      this._snackBar.open(\" Added Successfully\",\":-)\",{\n        duration: 3000,\n      });\n     \n    });\n  }\n\n\n}\n\n\n","<div class=\"container\">\n        <h3 mat-dialog-title>Are you sure you want to delete?</h3>\n        <div mat-dialog-content>\n          IP Address: {{data.ipaddress}}\n          <p></p>\n          Port: {{data.port}}\n          <p></p>\n          Test_Result: {{data.test_result}}\n          <p></p>\n          firstFoundAddress: {{data.firstFoundAddress}}\n          <p></p>\n          lastFoundAddress: {{data.lastFoundAddress}}\n        </div>\n      \n        <div mat-dialog-actions>\n          <button mat-button color=\"primary\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n          <button mat-button color=\"primary\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n        </div>\n      </div>\n","import {Component, OnInit, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ProxyDataService} from 'src/app/proxy-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n  ngOnInit(): void {\n  }\n\n  constructor(public dialogRef: MatDialogRef<DeleteComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: ProxyDataService, private _snackBar: MatSnackBar) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteProxy(this.data).subscribe(val => {\n      console.log(val);\n      this.dataService.refreshData.next(true);\n      this._snackBar.open(\" Deleted Successfully\",\":-)\",{\n        duration: 3000,\n      });    });\n  }\n\n}\n","\n<div class=\"container\">\n        <h3 mat-dialog-title>Update Proxy</h3>\n      \n        <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"IP Address\" [(ngModel)]=\"data.ipaddress\" name=\"ipaddress\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #input class=\"form-control\" placeholder=\"Port\" [(ngModel)]=\"data.port\" name=\"Port\" required >\n            </mat-form-field>\n          </div>\n      \n        \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput #inputstate class=\"form-control\" placeholder=\"Test_Result\" [(ngModel)]=\"data.test_result\" name=\"test_result\" maxlength=\"10\" required >\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"firstFoundAddress\" [(ngModel)]=\"data.firstFoundAddress\" name=\"First Found Address\">\n            </mat-form-field>\n          </div>\n      \n          <div class=\"form\">\n            <mat-form-field color=\"accent\">\n              <input matInput placeholder=\"lastFoundAddress\" [(ngModel)]=\"data.lastFoundAddress\" name=\"Last Found Address\">\n            </mat-form-field>\n          </div>\n\n      \n          <div mat-dialog-actions>\n                <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"stopEdit()\">Save</button>\n                <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n              </div>\n        </form>\n      </div>\n","import {Component, OnInit, Inject} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {ProxyDataService} from 'src/app/proxy-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<EditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public proxyDataService: ProxyDataService,private _snackBar: MatSnackBar) {\n  }\n\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n  ngOnInit(): void {\n  }\n\n\n  submit() {\n// emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n    this.proxyDataService.updateProxy(this.data).subscribe(val => {\n      console.log(val);\n      this.proxyDataService.refreshData.next(true);\n      this._snackBar.open(\"Updated Successfully\",\":-)\",{\n        duration: 3000,\n      });    \n    });\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<body>\n    <header>  \n        <img align=\"center\" src=\"assets\\Images\\logo.jpg\"  width=\"250\" height=\"100\">\n      </header>\n<div class=\"content\">\n<h2>Database and Web Techniques -  ProxyList Project</h2>\n<h3>By Harshitha Rathod </h3>\n     <h3>& </h3>\n     <h3> Surya Kiran Suravarapu\n        </h3>\n</div>\n    <footer>\n            <div align=\"right\">\n                <button color=\"white\" variant=\"contained\"  (click)=\"next();\">\n                    ProxyLists\n            </button>\n        </div>\n        </footer>\n\n\n</body>\n\n\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProxyDataService } from '../proxy-data.service';\n\n@Component({\n  selector: 'app-intro-page',\n  templateUrl: './intro-page.component.html',\n  styleUrls: ['./intro-page.component.css']\n})\nexport class IntroPageComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  next(){\n    this.router.navigate(['/proxyList'])\n  }\n\n}\n","export class Proxies{\r\n    id: Number;\r\n    ipaddress: string;\r\n    port:Number;\r\n    test_result: string;\r\n    anonymity:string;\r\n    firstFoundAddress: string;\r\n    lastFoundAddress: string;\r\n \r\n}","\n\n<mat-toolbar color=\"primary\">\n    <span class=\"head\"  align =\"center\">ProxyLists</span>\n    <span class=\"spacer\"></span>\n  </mat-toolbar>\n\n\n<div class=\"container text-center\">\n<mat-form-field appearance=\"fill\">\n    <mat-label>Proxy List Providers</mat-label>\n    <mat-select [(ngModel)]=\"selectedProxy\" (ngModelChange)=\"onProxySelection()\">\n      <mat-option value='none'>None</mat-option>\n      <mat-option value=\"1\">https://gimmeproxy.com/api/getProxy</mat-option>\n      <mat-option value=\"2\" >https://proxy11.com/api/proxy.json?key=MTI3OA.Xs--Lg.5FG2Pg_WoLej_ubo8rKpQQbaIZc</mat-option>\n      <mat-option value=\"3\">https://api.getproxylist.com/proxy</mat-option>\n      <mat-option value=\"4\">http://pubproxy.com/api/proxy</mat-option>\n     \n    </mat-select>\n  </mat-form-field><br><br>\n\n  \n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <mat-select [(ngModel)]=\"selectedValue\" (ngModelChange)=\"onDisplayingProxySelection()\"  >\n        <mat-option value='none' >All Proxies</mat-option>\n      <mat-option value=\"UP\" >WorkingProxies</mat-option>\n    </mat-select>\n    </mat-form-field><br><br>\n\n\n  <mat-form-field>\n    <mat-label>Search by IP Address</mat-label>\n    <mat-icon matPrefix aria-label=\"Search\">search</mat-icon>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. 192.225.137.25\">\n   </mat-form-field>\n\n    <mat-table [dataSource]=\"selectedProxyList\">\n      <ng-container matColumnDef=\"IP Address\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> IP Address </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\" > {{Proxies.ipaddress}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"port\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Port </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\" > {{Proxies.port}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"test_result\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Test Result </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.test_result}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"anonymity\">\n          <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Anonymity </mat-header-cell>\n          <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.anonymity}} </mat-cell>\n        </ng-container>\n      <ng-container matColumnDef=\"first found Address\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> First Found Address </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.firstFoundAddress}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"last found Address\">\n        <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Last Found Address </mat-header-cell>\n        <mat-cell *matCellDef=\"let Proxies\"> {{Proxies.lastFoundAddress}} </mat-cell>\n      </ng-container>\n     \n\n\n      <!-- Action Column -->\n <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>\n        <button mat-icon-button color=\"primary\" (click)=\"addNew()\">\n          <mat-icon aria-label=\"Example icon-button with a heart icon\">add</mat-icon>\n        </button>\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let Proxies; let i=index;\">\n        <button mat-icon-button color=\"accent\" (click)=\"startEdit(Proxies)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" (click)=\"deleteItem(Proxies)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n\n  </div>\n","import {Component, OnInit, ViewChild, ElementRef} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {ProxyDataService} from '../proxy-data.service';\nimport {Proxies} from '../proxies';\nimport {Observable} from 'rxjs';\nimport {Proxylist} from '../proxylist';\nimport {MatTableDataSource, MatTable} from '@angular/material/table';\nimport {CdkTableModule} from '@angular/cdk/table';\n\n\n\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddComponent} from '../dialogs/add/add.component';\nimport {EditComponent} from '../dialogs/edit/edit.component';\nimport {DeleteComponent} from '../dialogs/delete/delete.component';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-proxy-data-table',\n  templateUrl: './proxy-data-table.component.html',\n  styleUrls: ['./proxy-data-table.component.css']\n})\nexport class ProxyDataTableComponent implements OnInit {\n  selectedProxy: number;\n  selectedValue: string;\n  selectedProxyList: Proxies[];\n  ipaddress: string;\n  port: number;\n  index: number;\n  exampleDatabase: ProxyDataService | null;\n\n\n  proxyDataSource: Proxies[];\n  displayedColumns = ['IP Address', 'port', 'test_result','anonymity','first found Address', 'last found Address', 'action'];\n  dataSource: { ipaddress: any; port: any; }[];\n  @ViewChild(MatTable, {static: true}) table: MatTable<any>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild('filter', {static: true}) filter: ElementRef;\n\n  constructor(private proxyDataService: ProxyDataService, public dialog: MatDialog, private router:Router) {\n    this.proxyDataService.getProxies().subscribe(value => {\n        this.proxyDataSource = value;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.proxyDataService.refreshData.subscribe(\n      value => {\n        if (value) {\n          this.proxyDataService.getProxies().subscribe(proxies => {\n              this.proxyDataSource = proxies;\n              this.onProxySelection();\n            }\n          );\n        }\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    // deletthis.dataSource = new MatTableDataSource(this.selectedProxyList);\n    this.selectedProxyList = this.proxyDataSource.filter(proxy => proxy.id == this.selectedProxy && proxy.ipaddress.includes(filterValue));\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onProxySelection() {\n    this.selectedValue='none';\n    console.log(this.selectedProxy);\n    this.selectedProxyList = this.proxyDataSource.filter(proxy => proxy.id == this.selectedProxy);\n    console.log(this.selectedProxyList);\n  }\n\n  onDisplayingProxySelection() {\n    if (this.selectedValue === 'UP') {\n      this.selectedProxyList = this.selectedProxyList.filter(proxy => proxy.test_result == this.selectedValue);\n    }else{\n      this.selectedProxyList = this.proxyDataSource.filter(proxy => proxy.id == this.selectedProxy);\n    }\n  }\n\n  addNew() {\n    const dialogRef = this.dialog.open(AddComponent, {\n      data: {proxies: Proxies}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.exampleDatabase.dataChange.value.push(this.proxyDataService.getDialogData());\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  startEdit(proxy: any) {\n    const dialogRef = this.dialog.open(EditComponent, {\n      data: proxy\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // Based on ur requirement u can right after close logic here\n      /*  this.proxyDataService.updateProxy(this.editData).subscribe(val => {\n          // When using an edit things are little different, firstly we find record inside DataService by id\n          const foundIndex = this.proxyDataService.dataChange.value.findIndex(x => x.ipaddress === this.ipaddress);\n          console.log(foundIndex);\n          // Then you update that record using data from dialogData (values you enetered)\n          this.exampleDatabase.dataChange.value[foundIndex] = this.proxyDataService.getDialogData();\n          // And lastly refresh table\n          this.refreshTable();\n        });*/\n\n      }\n    });\n  }\n\n  refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  deleteItem(proxy: any) {\n    console.log(proxy);\n    const dialogRef = this.dialog.open(DeleteComponent, {\n      data: proxy\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        // Based on ur requirement u can right after close logic here\n        /* const foundIndex = this.proxyDataService.dataChange.value.findIndex(x => x.ipaddress === this.ipaddress);\n         // for delete we use splice in order to remove single object from DataService\n         this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n         this.exampleDatabase.getProxies();*/\n      }\n    });\n\n  }\n\n\n}\n\nexport class ProxyDataSource extends DataSource<any> {\n  filter: string;\n\n  constructor(private proxyDataService: ProxyDataService) {\n    super();\n  }\n\n  connect(): Observable<Proxies[]> {\n    return this.proxyDataService.getProxies();\n  }\n\n  disconnect() {\n  }\n\n  \n\n\n}\n","import {Injectable} from '@angular/core';\nimport {Proxies} from './proxies';\nimport {Proxylist} from './proxylist';\nimport {Observable, BehaviorSubject} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProxyDataService {\n  dataChange: BehaviorSubject<Proxies[]> = new BehaviorSubject<Proxies[]>([]);\n  private baseUrl = '/proxies/api';\n  dialogData: any;\n  refreshData: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n\n  constructor(private httpclient: HttpClient) {\n  }\n  \n\n  getProxies(): Observable<Proxies[]> {\n    return this.httpclient.get<Proxies[]>(`${this.baseUrl + '/getProxies'}`);\n  }\n\n  getProxy(id: number): Observable<Proxies[]> {\n    return this.httpclient.get<Proxies[]>(`${this.baseUrl + '/getProxy/id'}`);\n  }\n\n  createProxy(proxy: Proxies) {\n    return this.httpclient.post(`${this.baseUrl + '/postProxy'}`, proxy);\n  }\n\n  updateProxy(proxy: Proxies) {\n    return this.httpclient.put(`${this.baseUrl + '/putProxy'}`, proxy);\n  }\n\n  deleteProxy(proxy: Proxies): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders(), body: proxy\n    };\n    return this.httpclient.delete<any>(`${this.baseUrl + '/deleteProxy'}`, httpOptions);\n  }\n\n\n\n  getProxyLists(): Observable<Proxylist[]> {\n    return this.httpclient.get<Proxylist[]>(`${this.baseUrl + '/getProxyLists'}\n    \n`);\n\n  }\n\n\n\n  getDialogData() {\n    return this.dialogData;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}